#include<mpi.h>
#include<stdlib.h>

int main(int argc,char** argv){
MPI_Init(&argc,&argv);
int world_rank;
MPI_Comm_rank(MPI_COMM_WORLD,&world_rank);
int world_size;
MPI_Comm_size(MPI_COMM_WORLD,&world_size);
int number;
//char str;
if(world_rank == 0){
printf("Enter Input Message:");
//scanf("%d %s",&number,str);
scanf("%d",&number);
MPI_Send(&number,1,MPI_INT,1,123,MPI_COMM_WORLD);
//MPI_Send(str,strlen(str)+1,MPPI_CHAR,1,124,MPI_COMM_WORLD);
}
else if(world_rank == 1){
MPI_Recv(&number,1,MPI_INT,0,123,MPI_COMM_WORLD,MPI_STATUS_IGNORE);
//MPI_Recv(str,100,MPI_CHAR,0,124,MPI_COMM_WORLD,MPI_STATUS_IGNORE);
//printf("PID-1 received a message %d %s from PID-0\n",number,str);
printf("PID-1 received a message %d from PID-0\n",number);
}s
MPI_Finalize();
return 0;
}

Output:
1234
PID-1 received a message 1234 from PID-0

#include<mpi.h>
#include<stdlib.h>

int main(int argc,char** argv){
MPI_Init(&argc,&argv);
int world_rank;
MPI_Comm_rank(MPI_COMM_WORLD,&world_rank);
int world_size;
MPI_Comm_size(MPI_COMM_WORLD,&world_size);
int number;
if(world_rank == 0){
scanf("%d",&number);
MPI_Send(&number,1,MPI_INT,1,123,MPI_COMM_WORLD);
}
else if(world_rank == 1){
MPI_Recv(&number,1,MPI_INT,0,123,MPI_COMM_WORLD,MPI_STATUS_IGNORE);
printf("PID-1 received a message %d from PID-0\n",number);
}
MPI_Finalize();
return 0;
}
